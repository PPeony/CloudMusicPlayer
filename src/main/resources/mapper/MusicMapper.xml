<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.music.cloudmusicplayer.dao.MusicMapper">
    <resultMap id="BaseResultMap" type="com.music.cloudmusicplayer.entity.Music">
        <id column="music_id" jdbcType="INTEGER" property="musicId" />
        <result column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="music_name" jdbcType="VARCHAR" property="musicName" />
        <result column="music_singer" jdbcType="VARCHAR" property="musicSinger" />
        <result column="music_time" jdbcType="INTEGER" property="musicTime" />
        <result column="music_lyrics" jdbcType="LONGNVARCHAR" property="musicName" />
        <result column="music_path" jdbcType="VARCHAR" property="musicPath" />
        <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
        <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    </resultMap>

    <sql id="Base_Column_List">
        music_id, user_id, music_name, music_singer, music_time, music_lyrics, music_path, gmt_created, is_deleted
    </sql>

    <select id="selectAllMusicByUserId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from music
        where user_id = #{param1,jdbcType=INTEGER} and is_deleted = 0 order by ${param2,jdbcType=VARCHAR}
    </select>

    <select id="selectByMusicId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from music
        where music_id = #{musicId,jdbcType=INTEGER} and is_deleted = 0;
    </select>

    <select id="selectByProperties" parameterType="com.music.cloudmusicplayer.entity.Music" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from music
        <where>
            is_deleted = 0
            <if test="musicId != null">
                and music_id = #{musicId,jdbcType=INTEGER}
            </if>
            <if test="userId != null">
                and user_id = #{userId,jdbcType=INTEGER}
            </if>
            <if test="musicName != null">
                and music_name = #{musicName,jdbcType=VARCHAR}
            </if>
            <if test="musicSinger != null">
                and music_singer = #{musicSinger,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <insert id="insert" parameterType="com.music.cloudmusicplayer.entity.Music">
        insert into music (user_id,music_name,music_singer,
        music_time,music_lyrics,music_path,gmt_created,is_deleted
        )
        values (#{userId,jdbcType=INTEGER},#{musicName,jdbcType=VARCHAR},
        #{musicSinger,jdbcType=VARCHAR},#{musicTime,jdbcType=INTEGER},
        #{musicLyrics,jdbcType=VARCHAR},#{musicPath,jdbcType=VARCHAR},
        #{gmtCreated,jdbcType=TIMESTAMP},#{isDeleted,jdbcType=INTEGER}
        )
    </insert>


    <update id="update" parameterType="com.music.cloudmusicplayer.entity.Music">
        update music
        <set>
            <if test="musicName != null">
                music_name = #{musicName,jdbcType=VARCHAR},
            </if>
            <if test="musicSinger != null">
                music_singer = #{musicSinger,jdbcType=VARCHAR},
            </if>
            <if test="musicPath != null">
                music_path = #{musicPath,jdbcType=VARCHAR},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=INTEGER},
            </if>
        </set>
        where music_id = #{musicId,jdbcType=INTEGER}
    </update>

</mapper>